name: Update Flatpak Repo
on:
    workflow_dispatch:
        inputs:
            repo: 
                description: 'Github repo containing flatpak'
                type: 'string'
                required: true
            
            commit:
                description: 'Commit of flatpak to be built'
                type: 'string'
                required: false

            manifest:
                description: 'Path to manifest in repo'
                type: 'string'
                required: true

concurrency: ${{ github.repository }}
permissions:
    contents: write

env:
    # Used to generate .flatpakref and .flatpakrepo files, change if you are using a custom domain
    PAGES_REPO_URL: ${{ github.repository_owner }}.github.io/${{ github.event.repository.name }}/
    # The value '0' means only the latest version of a given flatpak is kept in the repo
    FLATPAK_HISTORY_LEN: 0
    # Wether or not to generate deltas for updates, uses extra storage but can make updates smaller
    FLATPAK_DELTAS: true
     
    FLATPAK_SRC: src-dir
    FLATPAK_BUILD: build-dir
    PAGES_REPO: repo-dir

jobs:
    build: 
        runs-on: ubuntu-latest

        steps:
          - name: Checkout Flatpak Source
            uses: actions/checkout@v3
            with:
                repository: ${{ inputs.repo }}
                ref: ${{ inputs.commit }}
                submodules: true
                path: ${{ env.FLATPAK_SRC }}

          - name: Checkout Pages Repo
            uses: actions/checkout@v3
            with:
                ref: gh-pages
                path: ${{ env.PAGES_REPO }}

          - name: Install flatpak-builder and flatpak
            run: |
                set -e
                sudo apt update -y
                sudo apt install -y flatpak-builder
                
          - name: Dump canonical manifest
            run: |
                set -e
                flatpak-builder --show-manifest ./${{ env.FLATPAK_SRC }}/${{ inputs.manifest }} > canonical-manifest.json

          - name: Download flatpak SDK and sources
            run: |
              set -e
              flatpak remote-add --user --if-not-exists flathub https://flathub.org/repo/flathub.flatpakrepo
              flatpak-builder --install-deps-from=flathub --install-deps-only --user /dev/null ./${{ env.FLATPAK_SRC }}/${{ inputs.manifest }}
              flatpak-builder --download-only /dev/null ./${{ env.FLATPAK_SRC }}/${{ inputs.manifest }}
          
          - name: Prime cache
            uses: actions/cache@v2
            with:
                path: |
                    .flatpak-builder/ccache
                key: flatpak-builder-${{ hashFiles('canonical-manifest.json') }}
                restore-keys: |
                    flatpak-builder-

          - name: Import GPG-key
            id: gpg-key
            uses: crazy-max/ghaction-import-gpg@v5
            with:
                gpg_private_key: ${{ secrets.PGP_PRIVATE_KEY }}
                passphrase: ${{ secrets.PGP_PASS }}

          - name: Prepare GPG-pubkey
            run: |
                set -e
                gpg --export ${{ steps.gpg-key.outputs.fingerprint }} > pubkey.gpg

          - name: Build flatpak
            run: |
                set -e
                mkdir -p ./${{ env.PAGES_REPO }}/repo
                flatpak-builder --disable-updates --disable-download --ccache --sandbox --gpg-sign=${{ steps.gpg-key.outputs.fingerprint }} --repo="./${{ env.PAGES_REPO }}/repo" ${{ env.FLATPAK_BUILD }} ${{ env.FLATPAK_SRC }}/${{ inputs.manifest }}

          - name: Update Repo
            run: |
                set -e
                mkdir -p ./${{ env.PAGES_REPO }}/repo/refs/remotes ./${{ env.PAGES_REPO }}/repo/refs/mirrors
                touch ./${{ env.PAGES_REPO }}/repo/refs/remotes/.gitkeep ./${{ env.PAGES_REPO }}/repo/refs/mirrors/.gitkeep
                flatpak build-update-repo --no-update-summary --prune --prune-depth=${{ env.FLATPAK_HISTORY_LEN }} ./${{ env.PAGES_REPO }}/repo
                flatpak build-update-repo --gpg-sign=${{ steps.gpg-key.outputs.fingerprint }} --gpg-import=pubkey.gpg --generate-static-deltas ./${{ env.PAGES_REPO }}/repo

          - name: Write .flatpakrepo file
            run: |
                set -e
                echo "[Flatpak Repo]
                Title=${{ env.PAGES_REPO_URL }}
                Url=https://${{ env.PAGES_REPO_URL }}repo/
                GPGKey=$(cat pubkey.gpg | base64 --wrap=0)" > ${{ env.PAGES_REPO }}/${{ github.repository_owner }}.flatpakrepo
        
          - name: Deploy Repo
            uses: peaceiris/actions-gh-pages@v3
            with:
                github_token: ${{ secrets.GITHUB_TOKEN }}
                publish_dir: ${{ env.PAGES_REPO }}
                enable_jekyll: true
                force_orphan: true

